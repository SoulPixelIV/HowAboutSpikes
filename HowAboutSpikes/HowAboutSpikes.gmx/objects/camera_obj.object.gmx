<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-13</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Vars
cameraSpeed = 0.06;
cameraWidth = 640;
cameraHeight = 360;

pauseMenu = false;
saveXPos = 0;
saveYPos = 0;

global.healthPause = 2;

global.transition = false;

//Set Camera View
if (instance_exists(player_obj))
{
    view_xview[0] = player_obj.x - (cameraWidth/2);
    view_yview[0] = player_obj.y - (cameraHeight/2);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface = surface_create(room_width, room_height);
surfaceScale = 1/8;
amount = 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu
buttonSelected = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera View Follow System

//Camera Transition
if (global.spawned == true)
{
    if (global.transition == false)
    {
        //view_wview[0] = 0;
        //view_hview[0] = 0;
        global.transition = true;
    }
    if (view_wview[0] &lt; cameraWidth)
    {
        view_wview[0] = view_wview[0] + 8;
    }
    if (view_hview[0] &lt; cameraHeight)
    {
        view_hview[0] = view_hview[0] + 4.7;
    }
}
else
{
    global.transition = false;
}

//Camera Follow
if (instance_exists(player_obj))
{
    //Set Camera X Borders
    if (player_obj.x &gt;= 320 &amp;&amp; player_obj.x &lt;= room_width - 320)
    {
        view_xview[0] = player_obj.x - (cameraWidth/2);
    }
    else
    {
        if (player_obj.x &lt;= 320)
        {
            view_xview[0] = 0;
        }
        if (player_obj.x &gt;= room_width - 320)
        {
            view_xview[0] = room_width - 640;
        }
    }
    
    //Set Camera Y Borders
    if (player_obj.y &lt;= (room_height - 180) &amp;&amp; player_obj.y &gt;= 180)
    {
        view_yview[0] += ((player_obj.y - (cameraHeight/2) - view_yview[0])) * cameraSpeed;
    }
    else
    {
        if (player_obj.y &gt;= (room_height - 180))
        {
            view_yview[0] += (((room_height - 180) - (cameraHeight/2) - view_yview[0])) * cameraSpeed;
        }
        if (player_obj.y &lt;= 180)
        {
            view_yview[0] += ((180 - (cameraHeight/2) - view_yview[0])) * cameraSpeed;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause System

key_pause = keyboard_check_pressed(vk_escape) || gamepad_button_check_pressed(0, gp_start);

if (key_pause)
{
    if (pauseMenu == false)
    {
        pauseMenu = true;
        saveXPos = player_obj.x;
        saveYPos = player_obj.y;
        with (player_obj)
        {
            global.healthPause = health;
            instance_destroy();
        }
    }
    else
    {
        pauseMenu = false;
        instance_create(saveXPos, saveYPos, player_obj);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu
key_up = keyboard_check_pressed(vk_up) || keyboard_check_pressed(ord("W")) || gamepad_button_check_pressed(0, gp_padu);
key_down = keyboard_check_pressed(vk_down) || keyboard_check_pressed(ord("S")) || gamepad_button_check_pressed(0, gp_padd);
key_enter = keyboard_check_pressed(vk_enter) || keyboard_check_pressed(vk_space) || gamepad_button_check_pressed(0, gp_face1);

if (pauseMenu == true)
{
    if (!instance_exists(cursor2_obj))
    {
        instance_create(global.guiPosX + 240, global.guiPosY + 160, cursor2_obj);
        buttonSelected = 0;
    }
    if (key_up)
    {
        if (buttonSelected &gt; -1)
        {
            buttonSelected = buttonSelected - 1;
        }
        if (buttonSelected == -1)
        {
            buttonSelected = 1;
        }
    }
    if (key_down)
    {
        if (buttonSelected &lt; 2)
        {
            buttonSelected = buttonSelected + 1;
        }
        if (buttonSelected == 2)
        {
            buttonSelected = 0;
        }
    }
    
    if (buttonSelected == 0)
    {
        cursor2_obj.x = global.guiPosX + 175;
        cursor2_obj.y = global.guiPosY + 180;
        if (key_enter)
        {
            pauseMenu = false;
            instance_create(saveXPos, saveYPos, player_obj);
        }
    }
    if (buttonSelected == 1)
    {
        cursor2_obj.x = global.guiPosX + 320;
        cursor2_obj.y = global.guiPosY + 214;;
        if (key_enter)
        {
            pauseMenu = false;
            room_goto(creditsMenu);
        }
    }
}
else
{
    with (cursor2_obj)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Map

if (pauseMenu)
{
    if (!instance_exists(map_obj))
    {
        instance_create(global.guiPosX + 470, global.guiPosY + 140, map_obj);
    }
    if (!instance_exists(menuLight_obj))
    {
        instance_create(global.guiPosX + 470, global.guiPosY + 140, menuLight_obj);
    }
}
else
{
    if (instance_exists(map_obj))
    {
        with (map_obj)
        {
            instance_destroy();
        }
    }
    if (instance_exists(menuLight_obj))
    {
        with (menuLight_obj)
        {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//###Game Over###
with (player_obj)
{
    if (dead)
    {
        with (camera_obj)
        {
            draw_set_font(gameover_fnt);
            draw_set_color(c_red);
            draw_text(300, 520, "Death Counter: " + string(global.deathCount));
            draw_sprite_stretched(gameover_spr, 0, 42, 180, 1800, 512);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_stretched(dirtyLensEffect_spr, 0, 0, 0, display_get_width(), display_get_height());
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pause Menu

if (pauseMenu == true)
{
    amount = 0.6;
}
else
{
    amount = 0;
}

if !surface_exists(surface)
{
    surface = surface_create(room_width, room_height);
    surfaceScale = 1/8;
    with (surface)
    {
        depth = 0;
    }
}
else
{
    surface_set_target(surface);
    draw_clear(c_black);
    surface_reset_target();
    draw_surface_ext(surface, 0, 0, 1/surfaceScale, 1/surfaceScale, 0, c_white, amount);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu GUI
if (pauseMenu == true)
{
    draw_set_color(c_white);
    draw_set_font(mainmenu_fnt);

    draw_text(64, 460, "Continue")

    draw_text(64, 560, "Back to title screen")
    
    draw_set_font(creditsBig_fnt);
    draw_set_colour(c_white);
    draw_text(72, 64, "PAUSED");
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
