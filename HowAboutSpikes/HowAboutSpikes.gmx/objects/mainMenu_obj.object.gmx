<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>buttonSelected = 0;
instance_create(160, 160, cursor_obj);
global.loadedRoom = 1;
global.continued = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Music
if (!audio_is_playing(mainMenu_msc))
{
    audio_stop_sound(heaven_msc);
    audio_stop_sound(undergroundCity_msc);
    audio_stop_sound(unknownForest_msc);
    audio_stop_sound(boss_msc);
    audio_stop_sound(beach_msc);
    audio_stop_sound(tutorial_msc);
    audio_stop_sound(snow_msc);
    audio_stop_sound(lava_msc);
    audio_stop_sound(dark_msc);
    audio_stop_sound(final_msc);
    audio_stop_sound(skull_msc);
    audio_play_sound(mainMenu_msc, 1, true);
    audio_sound_gain(mainMenu_msc, 0, 0);
    audio_sound_gain(mainMenu_msc, 0.2, 10000);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_up = keyboard_check_pressed(vk_up) || keyboard_check_pressed(ord("W")) || gamepad_button_check_pressed(0, gp_padu);
key_down = keyboard_check_pressed(vk_down) || keyboard_check_pressed(ord("S")) || gamepad_button_check_pressed(0, gp_padd);
key_enter = keyboard_check_pressed(vk_enter) || keyboard_check_pressed(vk_space) || gamepad_button_check_pressed(0, gp_face1);
key_back = keyboard_check_pressed(vk_escape) || keyboard_check_pressed(vk_backspace) || gamepad_button_check_pressed(0, gp_face2);

if (key_up)
{
    if (!audio_is_playing(click_snd))
    {
        audio_play_sound(click_snd, 1, false);
    }
    if (buttonSelected &gt; -1)
    {
        buttonSelected = buttonSelected - 1;
    }
    if (buttonSelected == -1)
    {
        buttonSelected = 4;
    }
}
if (key_down)
{
    if (!audio_is_playing(click_snd))
    {
        audio_play_sound(click_snd, 1, false);
    }
    if (buttonSelected &lt; 5)
    {
        buttonSelected = buttonSelected + 1;
    }
    if (buttonSelected == 5)
    {
        buttonSelected = 0;
    }
}

if (key_enter)
{
    if (!audio_is_playing(enter_snd))
    {
        audio_play_sound(enter_snd, 1, false);
    }
}

if (buttonSelected == 0)
{
    cursor_obj.x = 150;
    cursor_obj.y = 196;
    if (key_enter)
    {    
        room_goto(saveFileMenu);
    }
}

if (buttonSelected == 1)
{
    cursor_obj.x = 210;
    cursor_obj.y = 218;
    if (key_enter)
    {
        room_goto(multiplayerMenu);
    }
}
if (buttonSelected == 2)
{
    cursor_obj.x = 170;
    cursor_obj.y = 240;
    if (key_enter)
    {
    }
}
if (buttonSelected == 3)
{
    cursor_obj.x = 120;
    cursor_obj.y = 262;
    if (key_enter)
    {
        room_goto(settingsMenu);
    }
}
if (buttonSelected == 4)
{
    cursor_obj.x = 90;
    cursor_obj.y = 284;
    if (key_enter)
    {
        game_end();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu GUI
draw_set_color(c_white);
draw_set_font(global.newPixelMenu);

draw_text(64, 572, "Singleplayer")
draw_text(64, 636, "Multiplayer [BETA]")
draw_set_color(c_gray);
draw_text(64, 700, "Speedrun Mode")
draw_set_color(c_white);
draw_text(64, 764, "Settings")
draw_text(64, 828, "Quit")

draw_set_font(version_fnt);
draw_text(1570, 1040, "How About Spikes | Patch 18");

draw_set_font(global.newPixelMenuBig);
draw_text(72, 64, "How About Spikes");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if (file_exists("save1.has"))
{
    ini_open("save1.has");
    global.loadedRoom = ini_read_real("Save1", "current room", 1);
    if (global.loadedRoom == 6 || global.loadedRoom == 7)
    {
        background_index = snowBackground2_bg;
    }
    if (global.loadedRoom == 8 || global.loadedRoom == 9 || global.loadedRoom == 10 || global.loadedRoom == 11)
    {
        background_index = purpleHazeBackground_bg;
    }
    if (global.loadedRoom == 12 || global.loadedRoom == 13 || global.loadedRoom == 14)
    {
        background_index = lavaBackground_bg;
    }
    if (global.loadedRoom == 15 || global.loadedRoom == 16 || global.loadedRoom == 17)
    {
        background_index = undergroundCityBackground_bg;
    }
    if (global.loadedRoom == 18 || global.loadedRoom == 19 || global.loadedRoom == 20 || global.loadedRoom == 21)
    {
        background_index = noone;
    }
    if (global.loadedRoom == 21 || global.loadedRoom == 22)
    {
        background_index = skyBackground_bg;
    }
    ini_close();
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
