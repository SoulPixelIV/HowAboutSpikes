<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menuSite = 0;
menuElements[0] = "";
selectedElement = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cursor Movement
if (keyboard_check_pressed(vk_up) || keyboard_check_pressed(ord("W")) || gamepad_button_check_pressed(0, gp_padu))
{
    if (!audio_is_playing(click_snd))
    {
        audio_play_sound(click_snd, 1, false);
    }
    if (selectedElement &gt; -1)
    {
        selectedElement--;
    }
    if (selectedElement == -1)
    {
        selectedElement = array_length_1d(menuElements) - 1;
    }
}
if (keyboard_check_pressed(vk_down) || keyboard_check_pressed(ord("S")) || gamepad_button_check_pressed(0, gp_padd))
{
    if (!audio_is_playing(click_snd))
    {
        audio_play_sound(click_snd, 1, false);
    }
    if (selectedElement &lt; array_length_1d(menuElements))
    {
        selectedElement++;
    }
    if (selectedElement == array_length_1d(menuElements))
    {
        selectedElement = 0;
    }
}

//Menu Sites
if (keyboard_check_pressed(vk_enter) || keyboard_check_pressed(vk_space) || gamepad_button_check_pressed(0, gp_face1))
{
    switch (menuSite)
    {
        case 0:
            menuSite = 1;
            break;
        case 1:
            switch (selectedElement)
            {
                case 0:
                    menuSite = 7;
                    break;
                case 1:
                    menuSite = 6;
                    break;
                case 2:
                    menuSite = 8;
                    break;
                case 3:
                    menuSite = 2;
                    break;
                case 4:
                    game_end();
                    break;
            }
            break;
        case 2:
            switch (selectedElement)
            {
                case 0:
                    menuSite = 3;
                    break;
                case 1:
                    menuSite = 4;
                    break;
                case 2:
                    menuSite = 5;
                    break;
                case 3:
                    menuSite = 1;
                    break;
            }
            break;
        case 3:
            switch (selectedElement)
            {
                case 0:
                    //BRIGHTNESS LEVEL
                    break;
                case 1:
                    menuSite = 2;
                    break;  
            }
            break;
        case 4:
            switch (selectedElement)
            {
                case 0:
                    //MUSIC VOLUME
                    break;
                case 1:
                    menuSite = 2;
                    break;
            }
            break;
        case 5:
            switch (selectedElement)
            {
                case 0:
                    break;
                case 1:
                    break;
                case 2:
                    break;
                case 3:
                    break;
                case 4:
                    break;
                case 5:
                    menuSite = 2;
                    break;
            }
            break;
        case 6:
            switch (selectedElement)
            {
                case 0:
                    break;
                case 1:
                    break;
                case 2:
                    menuSite = 1;
                    break;
            }
            break;
        case 7:
            switch (selectedElement)
            {
                case 0:
                    break;
                case 1:
                    break;
                case 2:
                    menuSite = 1;
                    break;
            }
            break;
        case 8:
            switch (selectedElement)
            {
                case 0:
                    //SPEEDRUN
                    break;
                case 2:
                    menuSite = 1;
                    break;
            }
            break;
    }
}

switch (menuSite)
{
    case 0:
        menuElements[0] = "Press Start";
        menuElements[1] = "";
        menuElements[2] = "";
        menuElements[3] = "";
        menuElements[4] = "";
        menuElements[5] = "";
        break;
    case 1:
        menuElements[0] = "Singleplayer";
        menuElements[1] = "Multiplayer [BETA]";
        menuElements[2] = "Speedrun Mode";
        menuElements[3] = "Settings";
        menuElements[4] = "Quit";
        menuElements[5] = "";
        break;
    case 2:
        menuElements[0] = "Video Settings";
        menuElements[1] = "Audio Settings";
        menuElements[2] = "Controls";
        menuElements[3] = "Back";
        menuElements[4] = "";
        menuElements[5] = "";
        break;
    case 3:
        menuElements[0] = "Brightness Level";
        menuElements[1] = "Back";
        menuElements[2] = "";
        menuElements[3] = "";
        menuElements[4] = "";
        menuElements[5] = "";
        break;
    case 4:
        menuElements[0] = "Music Volume Level";
        menuElements[1] = "Back";
        menuElements[2] = "";
        menuElements[3] = "";
        menuElements[4] = "";
        menuElements[5] = "";
        break;
    case 5:
        menuElements[0] = "Move Left: ";
        menuElements[1] = "Move Right: ";
        menuElements[2] = "Jump: ";
        menuElements[3] = "Attack: ";
        menuElements[4] = "Throw: ";
        menuElements[5] = "Back";
        break;
    case 6:
        menuElements[0] = "Host Game";
        menuElements[1] = "Join Game";      
        menuElements[2] = "Back";
        menuElements[3] = "";
        menuElements[4] = "";
        menuElements[5] = "";
        break;
    case 7:
        menuElements[0] = "Save1";
        menuElements[1] = "Save2";      
        menuElements[2] = "Back";
        menuElements[3] = "";
        menuElements[4] = "";
        menuElements[5] = "";
        break;
    case 8:
        menuElements[0] = "Start Speedrun";
        menuElements[1] = "Back";
        menuElements[2] = "";
        menuElements[3] = "";
        menuElements[4] = "";
        menuElements[5] = "";
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Title
draw_set_color(c_white);
draw_set_font(global.newPixelMenuBig);
draw_text(72, 64, "How About Spikes");

//Menu Elements
draw_set_font(global.newPixelMenu);
for (i = 0; i &lt; array_length_1d(menuElements); i++)
{
    if (selectedElement == i)
    {
        draw_set_color(c_white);
        var txt = menuElements[i];
        var txt = string_insert("&gt; ", txt, 0);     
        draw_text(48, 512 + (64 * i), txt);       
    }
    else
    {
        draw_set_color(c_gray); 
        var txt = menuElements[i]; 
        draw_text(48, 512 + (64 * i), txt);
    }
}

draw_text(32, 32, selectedElement);

draw_set_font(version_fnt);
draw_set_color(c_white);
draw_text(1400, 1040, "How About Spikes | v.1.1 Speedrun Update");



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
