<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>finalBoss_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-14</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.2;
startPosX = x;
startPosY = y;

bossHealth = 100;

global.finalBossPhase = 0;

deathTimer = 300;
explosionTimer = 3;

moveTimer = 100;

alarm[0] = 140;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x, y, orbRed_obj);

if (global.finalBossPhase == 1)
{
    alarm[0] = 90;
}
else
{
    alarm[0] = 140;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += hspeed;
y += vspeed;

if (bossHealth &lt;= 30)
{
    global.finalBossPhase = 1;
}

if (place_meeting(x, y, scythe_obj))
{
    with (finalBoss2_obj)
    {
        bossHealth = bossHealth - global.damage / 3.9;
    }
    with (scythe_obj)
    {
        instance_destroy();
    }
}

if (bossHealth &lt;= 0)
{
    if (!steam_get_achievement("THE_END"))
    {
        steam_set_achievement("THE_END");
    }
    if (global.deathCount == 0)
    {
        if (!steam_get_achievement("ZERO_DEATHS"))
        {
            steam_set_achievement("ZERO_DEATHS");
        }
    }
    audio_stop_sound(boss_msc);
    x += 0;
    y += 1.5;
    deathTimer -= 1; 
    explosionTimer -= 1;
    if (spawnedBottle == false)
    {
        instance_create(x, y, glassbottle_obj);
        spawnedBottle = true;
    }
}

if (explosionTimer &lt; 0)
{
    instance_create(random_range(x - 128, x + 128), random_range(y - 128, y + 128), explosionNew_obj);
    explosionTimer = 3;
}

if (deathTimer &lt; 0)
{
    with (finalBoss2_obj)
    {
        instance_destroy();
    }
    with (chaingunTurret_obj)
    {
        instance_destroy();
    }
    with (demonSpawner_obj)
    {
        instance_destroy();
    }
    with (demon_obj)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (player_obj)
{
    if (place_meeting(x, y, checkpoint_obj))
    {  
        with (finalBoss2_obj)
        {
            bossHealth = 100;
            x = startPosX;
            y = startPosY;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

global.guiPosX = view_xview[0];
global.guiPosY = view_yview[0];
draw_healthbar(global.guiPosX + 32, global.guiPosY + 348, global.guiPosX + 608, global.guiPosY + 334, bossHealth, c_black, c_green, c_green, 0, true, true);

if (global.finalBossPhase == 1)
{
    image_blend = c_red;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
