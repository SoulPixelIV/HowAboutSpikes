<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>chaingunTurret_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>targetTimer = 100;
targeting = false;
alarm[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (targeting)
{
    instance_create(random_range(x - 7, x + 8), y, chaingunBullet_obj);
}
alarm[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(cubeBoss_obj))
{
    x = cubeBoss_obj.x;
    y = cubeBoss_obj.y + 32;
}

if (targeting)
{
    targetTimer -= 1;
    image_speed = 0.5;
    if (!audio_is_playing(chaingun_snd))
    {
        audio_play_sound(chaingun_snd, 1, false);
    }
}
else if (distance_to_object(player_obj) &lt; 170)
{
    targetTimer += 1;
    image_speed = 0;
}

if (distance_to_object(player_obj) &gt; 170)
{
    image_speed = 0;
}

if (targetTimer &lt; 0)
{
    targeting = false;
}
if (targetTimer &gt; 100)
{
    targeting = true;
}

if (instance_exists(player_obj))
{
    image_angle = point_direction(x, y, player_obj.x, player_obj.y) + 90;
}
else
{
    image_angle = 90;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (targeting = false &amp;&amp; distance_to_object(player_obj) &lt; 300)
{
    draw_set_colour(c_red);
    
    direction = point_direction(x, y, player_obj.x, player_obj.y);
    
    var max_length = 300;
    var solid_object = snowBlock_obj;
    
        for (var i = 0; i &lt; max_length; i++)
        {
            var lx = x + lengthdir_x(i, direction);
            var ly = y + lengthdir_y(i, direction);
        
            if (collision_point(lx, ly, solid_object, false, true))
            {
                break;
            }
        
        }
    
    draw_line(x, y, lx, ly);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
